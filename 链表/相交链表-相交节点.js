
// 1 => 2 => 3 => 4 => 5  A
//                     ||
//                     6 => 7 => 8 => 9 
//                     ||                      
// 10 => 11 =>  12 =>  13  B
// 1  10
// 2  11
// 3  12
// 4  13
// 5  6
// 6  7
// 7  8
// 8  9
// B 链表开始A
// 9  1
// A 链表开始B
// 10  2
// 11  3
// 12  4
// 13  5
// 6   6 <= 相交节点处

// 1 => 2 => 3 => 4 => 5
//                     ||
//                     6 => 7 => 8 => 9 => 10
//                     ||                      
// 11 => 12 =>  13 =>  14
// 1  11
// 2  12
// 3  13
// 4  14
// 5  6
// 6  7
// 7  8
// 8  9
// 9  10
// B 链表开始A
// 10 1
// A 链表开始B
// 11  2
// 12  3
// 13  4
// 14  5
// 6   6 <= 相交节点处

// 指针交换

function isCrossLinks(head1, head2) {
    if (head1 === null || head2 === null) {
        return false;
    }
    let la = head1;
    let lb = head2;

    while (la !== lb) {
        la = la === null ? head2 : la.next;
        lb = lb === null ? head1 : lb.next;
    }

    return la;
}